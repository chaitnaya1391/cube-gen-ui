services:
  db:
    build: ./db
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: cubepostgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: titanic
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  cube:
    build: ./cube
    container_name: cube
    restart: always
    ports:
      - '4000:4000'
      - '15432:15432'
    volumes:
      - cube_data:/cube/data 
    environment:
      CUBEJS_API_SECRET: secret
      CUBEJS_DEV_MODE: true
      CUBEJS_DB_TYPE: postgres
      CUBEJS_DB_HOST: db
      CUBEJS_DB_NAME: titanic
      CUBEJS_DB_USER: cubepostgres
      CUBEJS_DB_PASS: password
      CUBEJS_DB_SSL: false
      CUBEJS_PG_SQL_PORT: 15432
      CUBEJS_SQL_USER: cubesql
      CUBEJS_SQL_PASSWORD: cubesql

    depends_on:
      - db

  mcp:
    build: ./cube-mcp
    container_name: mcp
    ports:
      - '8000:8000'
    environment:
      - CUBEJS_BASE_URL=http://cube:4000
      - CUBEJS_API_TOKEN=secret
      - MCP_PORT=8000
      - CUBEJS_CUBESQL_HOST=cube
      - CUBEJS_CUBESQL_PORT=15432
      - CUBEJS_CUBESQL_USER=cubesql
      - CUBEJS_CUBESQL_PASSWORD=cubesql
    depends_on:
      - cube

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  cube_data:
  pgadmin_data: